{"version":3,"sources":["components/Buttons/index.js","containers/Calendar/index.js"],"names":["ButtonWithLoader","children","loader","props","Button","startIcon","CircularProgress","size","disabled","localizer","momentLocalizer","moment","MAZCalendar","dispatch","useDispatch","useState","open","setOpen","Date","selectedDate","setSelectedDate","selectedEndDate","setSelectedEndDate","events","useSelector","CalendarSelector","getEvents","eventsLoader","CommonSelector","isLoading","CalendarConstant","GET_EVENTS","loaderCreateEvent","CREATE_EVENT","useEffect","CalendarAction","onRequestClose","eventSchema","useMemo","yup","shape","event_name","required","schedule_name","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","control","formState","isValid","isSubmitting","isDirty","className","showLoadingAnimation","type","rows","ready","selectable","defaultView","scrollToTime","defaultDate","onSelectEvent","event","console","log","alert","title","onSelectSlot","slotInfo","start","end","Dialog","onClose","disableEnforceFocus","onSubmit","params","payload","event_description","duration","diff","schedule_description","createEvent","autoComplete","DialogTitle","DialogContent","DialogContentText","FormControl","TextField","name","inputRef","label","margin","fullWidth","error","helperText","message","InputLabelProps","shrink","as","renderInput","value","onChange","date","DialogActions","variant","color","onClick"],"mappings":"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","file":"static/js/7.4b995cef.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport {CircularProgress} from \"@material-ui/core\";\n\n\nconst ButtonWithLoader = ({children, loader, ...props}) => {\n    return (\n        !loader ?\n            <Button {...props}>\n                {children}\n            </Button>\n            :\n            <Button startIcon={<CircularProgress size={14}/>} {...props} disabled>\n                {children}\n            </Button>\n    )\n}\n\nButtonWithLoader.propTypes = {\n    children: PropTypes.any,\n    loader: PropTypes.bool.isRequired,\n}\n\nexport default ButtonWithLoader;","import React, {useEffect, useState, useMemo} from \"react\";\nimport moment from \"moment\";\nimport ReactPlaceholder from \"react-placeholder\";\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CalendarAction} from \"actions\";\nimport {CalendarSelector, CommonSelector} from \"selectors\";\nimport {CalendarConstant} from \"constants/index\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport FormControl from '@material-ui/core/FormControl';\n\nimport {Controller, useForm} from \"react-hook-form\";\nimport {yupResolver} from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport ButtonWithLoader from \"components/Buttons\";\nimport {DateTimePicker} from '@material-ui/pickers';\n\n\nconst localizer = momentLocalizer(moment)\n\nconst MAZCalendar = () => {\n    const dispatch = useDispatch();\n    const [open, setOpen] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [selectedEndDate, setSelectedEndDate] = useState(new Date());\n    const events = useSelector(CalendarSelector.getEvents());\n    const eventsLoader = useSelector(CommonSelector.isLoading(CalendarConstant.GET_EVENTS))\n    const loaderCreateEvent = useSelector(CommonSelector.isLoading(CalendarConstant.CREATE_EVENT))\n\n    useEffect(() => {\n        dispatch(CalendarAction.getEvents());\n        // eslint-disable-next-line\n    }, [])\n\n    const handleEventSelect = (event) => {\n        console.log(\"Handle Select\")\n        alert(event.title)\n    }\n\n    const handleSelectSlot = (slotInfo) => {\n        setOpen(true);\n        setSelectedDate(slotInfo.start);\n        setSelectedEndDate(slotInfo.end)\n    }\n\n    const onRequestClose = () => {\n        setOpen(false);\n    }\n\n    const eventSchema = useMemo(\n        () =>\n            yup.object().shape({\n                event_name: yup.string().required(),\n                schedule_name: yup.string().required(),\n            }),\n        []\n    );\n    const {register, handleSubmit, errors, control, formState} = useForm({\n        mode: 'all',\n        resolver: yupResolver(eventSchema),\n    });\n    const { isValid, isSubmitting, isDirty } = formState;\n\n    const onSubmit = (params) => {\n        console.log(params);\n        console.log(selectedDate, selectedEndDate);\n        let payload = {\n            \"title\": params.event_name,\n            \"description\": params.event_description,\n            \"appointments\": [\n                {\n                    \"start\": selectedDate,\n                    \"interval\": moment.duration(moment(selectedEndDate).diff(moment(selectedDate))),\n                    \"description\": params.schedule_description,\n                    \"title\": params.schedule_name,\n                    \"alert\": false,\n                }\n            ]\n        }\n        dispatch(CalendarAction.createEvent(payload));\n    }\n\n    const handleEventDelete = (params) => {\n        // dispatch(CalendarAction.deleteEvent(params));\n        // TODO\n    }\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    }\n\n    const handleEndDateChange = (date) => {\n        setSelectedEndDate(date);\n    }\n\n    return (\n        <div className=\"animated slideInUpTiny animation-duration-3\">\n            <div className=\"app-calendar app-cul-calendar animated slideInUpTiny animation-duration-3 card p-2\">\n                <h3 className=\"callout\">\n                    Click an event to see more info, or\n                    drag the mouse over the calendar to select a date/time range.\n                </h3>\n                <ReactPlaceholder showLoadingAnimation type='text' rows={14} ready={!eventsLoader}>\n                    <Calendar\n                        localizer={localizer}\n                        selectable\n                        events={events}\n                        defaultView='week'\n                        scrollToTime={new Date(1970, 1, 1, 6)}\n                        defaultDate={new Date()}\n                        onSelectEvent={handleEventSelect}\n                        onSelectSlot={handleSelectSlot}\n                    />\n                    <Dialog open={open} onClose={onRequestClose} disableEnforceFocus>\n                        <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                            <DialogTitle>Add Event</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    Use this form to add your event details.\n                                </DialogContentText>\n                                <div className=\"col-xs-12 col-sm-12\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12 mt-2 mb-2\">\n                                            <FormControl className=\"col-md-12\">\n                                                <TextField name=\"event_name\" type=\"text\" inputRef={register} label=\"Event Name\" margin=\"normal\" fullWidth\n                                                           error={!!errors.event_name} helperText={errors.event_name ? errors.event_name.message : ''}\n                                                           // defaultValue={item.event_name} disabled={isRead}\n                                                           required InputLabelProps={{ shrink: true }} />\n                                            </FormControl>\n                                        </div>\n                                        <div className=\"col-md-12 mt-2 mb-2\">\n                                            <FormControl className=\"col-md-12\">\n                                                <TextField name=\"event_description\" type=\"text\" inputRef={register} label=\"Event Description\" margin=\"normal\" fullWidth\n                                                           error={!!errors.event_description} helperText={errors.event_description ? errors.event_description.message : ''}\n                                                           // defaultValue={item.event_description} disabled={isRead}\n                                                           InputLabelProps={{ shrink: true }} />\n                                            </FormControl>\n                                        </div>\n                                        <div className=\"col-md-12 mt-2 mb-2\">\n                                            <FormControl className=\"col-md-12\">\n                                                <TextField name=\"schedule_name\" type=\"text\" inputRef={register} label=\"Schedule Name\" margin=\"normal\" fullWidth\n                                                           error={!!errors.schedule_name} helperText={errors.schedule_name ? errors.schedule_name.message : ''}\n                                                           // defaultValue={item.schedule_name} disabled={isRead}\n                                                           required InputLabelProps={{ shrink: true }} />\n                                            </FormControl>\n                                        </div>\n                                        <div className=\"col-md-12 mt-2 mb-2\">\n                                            <FormControl className=\"col-md-12\">\n                                                <TextField name=\"schedule_description\" type=\"text\" inputRef={register} label=\"Schedule Description\" margin=\"normal\" fullWidth\n                                                           error={!!errors.schedule_description} helperText={errors.schedule_description ? errors.schedule_description.message : ''}\n                                                           // defaultValue={item.schedule_name} disabled={isRead}\n                                                           InputLabelProps={{ shrink: true }} />\n                                            </FormControl>\n                                        </div>\n                                        <div className=\"col-md-12 mt-2 mb-2\">\n                                            <FormControl className=\"col-md-12\">\n                                                <Controller\n                                                    as={\n                                                        <DateTimePicker\n                                                            renderInput={\n                                                                (props) => <TextField {...props} />\n                                                            }\n                                                            label=\"Schedule Start\"\n                                                            value={selectedDate}\n                                                            onChange={handleDateChange}\n                                                        />\n                                                    }\n                                                    control={control}\n                                                    name=\"schedule_start\"\n                                                />\n                                            </FormControl>\n                                        </div>\n                                        <div className=\"col-md-12 mt-2 mb-2\">\n                                            <FormControl className=\"col-md-12\">\n                                                <Controller\n                                                    as={\n                                                        <DateTimePicker\n                                                            renderInput={\n                                                                (props) => <TextField {...props} />\n                                                            }\n                                                            label=\"Schedule End\"\n                                                            value={selectedEndDate}\n                                                            onChange={handleEndDateChange}\n                                                        />\n                                                    }\n                                                    control={control}\n                                                    name=\"schedule_end\"\n                                                />\n                                            </FormControl>\n                                        </div>\n                                    </div>\n                                </div>\n                            </DialogContent>\n                            <DialogActions>\n                                <div className=\"d-flex w-100 justify-content-between pl-2 pr-2\">\n                                    <div>\n                                        <ButtonWithLoader type=\"submit\" variant=\"contained\" color=\"primary\"\n                                                          className=\"mt-2 mb-2 jr-btn-sm\"\n                                                          disabled={!isValid || isSubmitting || !isDirty}\n                                                          loader={loaderCreateEvent}>\n                                            Save\n                                        </ButtonWithLoader>\n                                        <Button variant=\"contained\" color=\"primary\" className=\"ml-2 mt-2 mb-2 jr-btn-sm\"\n                                                disabled={isSubmitting} onClick={onRequestClose}>\n                                            Cancel\n                                        </Button>\n                                    </div>\n                                    <div>\n                                        <Button variant=\"contained\" className=\"ml-2 mt-2 mb-2 jr-btn-sm bg-danger text-white\"\n                                                disabled={isSubmitting} onClick={handleEventDelete}>\n                                            Delete\n                                        </Button>\n                                    </div>\n                                </div>\n                            </DialogActions>\n                        </form>\n                    </Dialog>\n                </ReactPlaceholder>\n            </div>\n        </div>\n    )\n}\n\nexport default MAZCalendar;"],"sourceRoot":""}